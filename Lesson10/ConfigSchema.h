#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Data.dll>
#using <System.Xml.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace Lesson10 {
    using namespace System;
    ref class NewDataSet;
    
    
    /// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
    [System::Serializable, 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedDataSetSchema"), 
    System::Xml::Serialization::XmlRootAttribute(L"NewDataSet"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.DataSet")]
    public ref class NewDataSet : public ::System::Data::DataSet {
        public : ref class ConfigurationDataTable;
        public : ref class EndPointsDataTable;
        public : ref class EndpointDataTable;
        public : ref class ConfigurationRow;
        public : ref class EndPointsRow;
        public : ref class EndpointRow;
        public : ref class ConfigurationRowChangeEvent;
        public : ref class EndPointsRowChangeEvent;
        public : ref class EndpointRowChangeEvent;
        
        private: Lesson10::NewDataSet::ConfigurationDataTable^  tableConfiguration;
        
        private: Lesson10::NewDataSet::EndPointsDataTable^  tableEndPoints;
        
        private: Lesson10::NewDataSet::EndpointDataTable^  tableEndpoint;
        
        private: ::System::Data::DataRelation^  relationConfiguration_EndPoints;
        
        private: ::System::Data::DataRelation^  relationEndPoints_Endpoint;
        
        private: ::System::Data::SchemaSerializationMode _schemaSerializationMode;
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void ConfigurationRowChangeEventHandler(::System::Object^  sender, Lesson10::NewDataSet::ConfigurationRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void EndPointsRowChangeEventHandler(::System::Object^  sender, Lesson10::NewDataSet::EndPointsRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void EndpointRowChangeEventHandler(::System::Object^  sender, Lesson10::NewDataSet::EndpointRowChangeEvent^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet();
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property Lesson10::NewDataSet::ConfigurationDataTable^  Configuration {
            Lesson10::NewDataSet::ConfigurationDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property Lesson10::NewDataSet::EndPointsDataTable^  EndPoints {
            Lesson10::NewDataSet::EndPointsDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property Lesson10::NewDataSet::EndpointDataTable^  Endpoint {
            Lesson10::NewDataSet::EndpointDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::BrowsableAttribute(true), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Visible)]
        virtual property ::System::Data::SchemaSerializationMode SchemaSerializationMode {
            ::System::Data::SchemaSerializationMode get() override;
            System::Void set(::System::Data::SchemaSerializationMode value) override;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataTableCollection^  Tables {
            ::System::Data::DataTableCollection^  get() new;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataRelationCollection^  Relations {
            ::System::Data::DataRelationCollection^  get() new;
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void InitializeDerivedDataSet() override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataSet^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeTables() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeRelations() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void ReadXmlSerializable(::System::Xml::XmlReader^  reader) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Xml::Schema::XmlSchema^  GetSchemaSerializable() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars(::System::Boolean initTable);
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeConfiguration();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeEndPoints();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeEndpoint();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ConfigurationDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnLogFileName;
            
            private: ::System::Data::DataColumn^  columnConfiguration_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::ConfigurationRowChangeEventHandler^  ConfigurationRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::ConfigurationRowChangeEventHandler^  ConfigurationRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::ConfigurationRowChangeEventHandler^  ConfigurationRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::ConfigurationRowChangeEventHandler^  ConfigurationRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ConfigurationDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ConfigurationDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ConfigurationDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  LogFileNameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Configuration_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property Lesson10::NewDataSet::ConfigurationRow^  default [::System::Int32 ] {
                Lesson10::NewDataSet::ConfigurationRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddConfigurationRow(Lesson10::NewDataSet::ConfigurationRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            Lesson10::NewDataSet::ConfigurationRow^  AddConfigurationRow(System::String^  LogFileName);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            Lesson10::NewDataSet::ConfigurationRow^  NewConfigurationRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveConfigurationRow(Lesson10::NewDataSet::ConfigurationRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class EndPointsDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnEndPoints_Id;
            
            private: ::System::Data::DataColumn^  columnConfiguration_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::EndPointsRowChangeEventHandler^  EndPointsRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::EndPointsRowChangeEventHandler^  EndPointsRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::EndPointsRowChangeEventHandler^  EndPointsRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::EndPointsRowChangeEventHandler^  EndPointsRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndPointsDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndPointsDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndPointsDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  EndPoints_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  Configuration_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property Lesson10::NewDataSet::EndPointsRow^  default [::System::Int32 ] {
                Lesson10::NewDataSet::EndPointsRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddEndPointsRow(Lesson10::NewDataSet::EndPointsRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            Lesson10::NewDataSet::EndPointsRow^  AddEndPointsRow(Lesson10::NewDataSet::ConfigurationRow^  parentConfigurationRowByConfiguration_EndPoints);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            Lesson10::NewDataSet::EndPointsRow^  NewEndPointsRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveEndPointsRow(Lesson10::NewDataSet::EndPointsRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class EndpointDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnType;
            
            private: ::System::Data::DataColumn^  columnIP;
            
            private: ::System::Data::DataColumn^  columnPort;
            
            private: ::System::Data::DataColumn^  columnEndPoints_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::EndpointRowChangeEventHandler^  EndpointRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::EndpointRowChangeEventHandler^  EndpointRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::EndpointRowChangeEventHandler^  EndpointRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event Lesson10::NewDataSet::EndpointRowChangeEventHandler^  EndpointRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndpointDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndpointDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndpointDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  TypeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  IPColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  PortColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  EndPoints_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property Lesson10::NewDataSet::EndpointRow^  default [::System::Int32 ] {
                Lesson10::NewDataSet::EndpointRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddEndpointRow(Lesson10::NewDataSet::EndpointRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            Lesson10::NewDataSet::EndpointRow^  AddEndpointRow(System::String^  Type, System::String^  IP, System::UInt64 Port, 
                        Lesson10::NewDataSet::EndPointsRow^  parentEndPointsRowByEndPoints_Endpoint);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            Lesson10::NewDataSet::EndpointRow^  NewEndpointRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveEndpointRow(Lesson10::NewDataSet::EndpointRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class ConfigurationRow : public ::System::Data::DataRow {
            
            private: Lesson10::NewDataSet::ConfigurationDataTable^  tableConfiguration;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ConfigurationRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  LogFileName {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Configuration_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< Lesson10::NewDataSet::EndPointsRow^  >^  GetEndPointsRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class EndPointsRow : public ::System::Data::DataRow {
            
            private: Lesson10::NewDataSet::EndPointsDataTable^  tableEndPoints;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndPointsRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 EndPoints_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 Configuration_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property Lesson10::NewDataSet::ConfigurationRow^  ConfigurationRow {
                Lesson10::NewDataSet::ConfigurationRow^  get();
                System::Void set(Lesson10::NewDataSet::ConfigurationRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsConfiguration_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetConfiguration_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< Lesson10::NewDataSet::EndpointRow^  >^  GetEndpointRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class EndpointRow : public ::System::Data::DataRow {
            
            private: Lesson10::NewDataSet::EndpointDataTable^  tableEndpoint;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndpointRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  Type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  IP {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::UInt64 Port {
                System::UInt64 get();
                System::Void set(System::UInt64 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 EndPoints_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property Lesson10::NewDataSet::EndPointsRow^  EndPointsRow {
                Lesson10::NewDataSet::EndPointsRow^  get();
                System::Void set(Lesson10::NewDataSet::EndPointsRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsEndPoints_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetEndPoints_IdNull();
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class ConfigurationRowChangeEvent : public ::System::EventArgs {
            
            private: Lesson10::NewDataSet::ConfigurationRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ConfigurationRowChangeEvent(Lesson10::NewDataSet::ConfigurationRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property Lesson10::NewDataSet::ConfigurationRow^  Row {
                Lesson10::NewDataSet::ConfigurationRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class EndPointsRowChangeEvent : public ::System::EventArgs {
            
            private: Lesson10::NewDataSet::EndPointsRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndPointsRowChangeEvent(Lesson10::NewDataSet::EndPointsRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property Lesson10::NewDataSet::EndPointsRow^  Row {
                Lesson10::NewDataSet::EndPointsRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class EndpointRowChangeEvent : public ::System::EventArgs {
            
            private: Lesson10::NewDataSet::EndpointRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            EndpointRowChangeEvent(Lesson10::NewDataSet::EndpointRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property Lesson10::NewDataSet::EndpointRow^  Row {
                Lesson10::NewDataSet::EndpointRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
    };
}
namespace Lesson10 {
    
    
    inline NewDataSet::NewDataSet() {
        this->BeginInit();
        this->InitClass();
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &Lesson10::NewDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        __super::Relations->CollectionChanged += schemaChangedHandler;
        this->EndInit();
    }
    
    inline NewDataSet::NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataSet(info, context, false) {
        if (this->IsBinarySerialized(info, context) == true) {
            this->InitVars(false);
            ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler1 = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &Lesson10::NewDataSet::SchemaChanged);
            this->Tables->CollectionChanged += schemaChangedHandler1;
            this->Relations->CollectionChanged += schemaChangedHandler1;
            return;
        }
        ::System::String^  strSchema = (cli::safe_cast<::System::String^  >(info->GetValue(L"XmlSchema", ::System::String::typeid)));
        if (this->DetermineSchemaSerializationMode(info, context) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
            if (ds->Tables[L"Configuration"] != nullptr) {
                __super::Tables->Add((gcnew Lesson10::NewDataSet::ConfigurationDataTable(ds->Tables[L"Configuration"])));
            }
            if (ds->Tables[L"EndPoints"] != nullptr) {
                __super::Tables->Add((gcnew Lesson10::NewDataSet::EndPointsDataTable(ds->Tables[L"EndPoints"])));
            }
            if (ds->Tables[L"Endpoint"] != nullptr) {
                __super::Tables->Add((gcnew Lesson10::NewDataSet::EndpointDataTable(ds->Tables[L"Endpoint"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
        }
        this->GetSerializationData(info, context);
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &Lesson10::NewDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        this->Relations->CollectionChanged += schemaChangedHandler;
    }
    
    inline Lesson10::NewDataSet::ConfigurationDataTable^  NewDataSet::Configuration::get() {
        return this->tableConfiguration;
    }
    
    inline Lesson10::NewDataSet::EndPointsDataTable^  NewDataSet::EndPoints::get() {
        return this->tableEndPoints;
    }
    
    inline Lesson10::NewDataSet::EndpointDataTable^  NewDataSet::Endpoint::get() {
        return this->tableEndpoint;
    }
    
    inline ::System::Data::SchemaSerializationMode NewDataSet::SchemaSerializationMode::get() {
        return this->_schemaSerializationMode;
    }
    inline System::Void NewDataSet::SchemaSerializationMode::set(::System::Data::SchemaSerializationMode value) {
        this->_schemaSerializationMode = __identifier(value);
    }
    
    inline ::System::Data::DataTableCollection^  NewDataSet::Tables::get() {
        return __super::Tables;
    }
    
    inline ::System::Data::DataRelationCollection^  NewDataSet::Relations::get() {
        return __super::Relations;
    }
    
    inline ::System::Void NewDataSet::InitializeDerivedDataSet() {
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline ::System::Data::DataSet^  NewDataSet::Clone() {
        Lesson10::NewDataSet^  cln = (cli::safe_cast<Lesson10::NewDataSet^  >(__super::Clone()));
        cln->InitVars();
        cln->SchemaSerializationMode = this->SchemaSerializationMode;
        return cln;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeTables() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeRelations() {
        return false;
    }
    
    inline ::System::Void NewDataSet::ReadXmlSerializable(::System::Xml::XmlReader^  reader) {
        if (this->DetermineSchemaSerializationMode(reader) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            this->Reset();
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXml(reader);
            if (ds->Tables[L"Configuration"] != nullptr) {
                __super::Tables->Add((gcnew Lesson10::NewDataSet::ConfigurationDataTable(ds->Tables[L"Configuration"])));
            }
            if (ds->Tables[L"EndPoints"] != nullptr) {
                __super::Tables->Add((gcnew Lesson10::NewDataSet::EndPointsDataTable(ds->Tables[L"EndPoints"])));
            }
            if (ds->Tables[L"Endpoint"] != nullptr) {
                __super::Tables->Add((gcnew Lesson10::NewDataSet::EndpointDataTable(ds->Tables[L"Endpoint"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXml(reader);
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchema^  NewDataSet::GetSchemaSerializable() {
        ::System::IO::MemoryStream^  stream = (gcnew ::System::IO::MemoryStream());
        this->WriteXmlSchema((gcnew ::System::Xml::XmlTextWriter(stream, nullptr)));
        stream->Position = 0;
        return ::System::Xml::Schema::XmlSchema::Read((gcnew ::System::Xml::XmlTextReader(stream)), nullptr);
    }
    
    inline ::System::Void NewDataSet::InitVars() {
        this->InitVars(true);
    }
    
    inline ::System::Void NewDataSet::InitVars(::System::Boolean initTable) {
        this->tableConfiguration = (cli::safe_cast<Lesson10::NewDataSet::ConfigurationDataTable^  >(__super::Tables[L"Configuration"]));
        if (initTable == true) {
            if (this->tableConfiguration != nullptr) {
                this->tableConfiguration->InitVars();
            }
        }
        this->tableEndPoints = (cli::safe_cast<Lesson10::NewDataSet::EndPointsDataTable^  >(__super::Tables[L"EndPoints"]));
        if (initTable == true) {
            if (this->tableEndPoints != nullptr) {
                this->tableEndPoints->InitVars();
            }
        }
        this->tableEndpoint = (cli::safe_cast<Lesson10::NewDataSet::EndpointDataTable^  >(__super::Tables[L"Endpoint"]));
        if (initTable == true) {
            if (this->tableEndpoint != nullptr) {
                this->tableEndpoint->InitVars();
            }
        }
        this->relationConfiguration_EndPoints = this->Relations[L"Configuration_EndPoints"];
        this->relationEndPoints_Endpoint = this->Relations[L"EndPoints_Endpoint"];
    }
    
    inline ::System::Void NewDataSet::InitClass() {
        this->DataSetName = L"NewDataSet";
        this->Prefix = L"";
        this->Locale = (gcnew ::System::Globalization::CultureInfo(L""));
        this->EnforceConstraints = true;
        this->SchemaSerializationMode = ::System::Data::SchemaSerializationMode::IncludeSchema;
        this->tableConfiguration = (gcnew Lesson10::NewDataSet::ConfigurationDataTable());
        __super::Tables->Add(this->tableConfiguration);
        this->tableEndPoints = (gcnew Lesson10::NewDataSet::EndPointsDataTable());
        __super::Tables->Add(this->tableEndPoints);
        this->tableEndpoint = (gcnew Lesson10::NewDataSet::EndpointDataTable());
        __super::Tables->Add(this->tableEndpoint);
        ::System::Data::ForeignKeyConstraint^  fkc;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"Configuration_EndPoints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableConfiguration->Configuration_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEndPoints->Configuration_IdColumn}));
        this->tableEndPoints->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"EndPoints_Endpoint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEndPoints->EndPoints_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEndpoint->EndPoints_IdColumn}));
        this->tableEndpoint->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        this->relationConfiguration_EndPoints = (gcnew ::System::Data::DataRelation(L"Configuration_EndPoints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableConfiguration->Configuration_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEndPoints->Configuration_IdColumn}, false));
        this->relationConfiguration_EndPoints->Nested = true;
        this->Relations->Add(this->relationConfiguration_EndPoints);
        this->relationEndPoints_Endpoint = (gcnew ::System::Data::DataRelation(L"EndPoints_Endpoint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEndPoints->EndPoints_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableEndpoint->EndPoints_IdColumn}, false));
        this->relationEndPoints_Endpoint->Nested = true;
        this->Relations->Add(this->relationEndPoints_Endpoint);
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeConfiguration() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeEndPoints() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeEndpoint() {
        return false;
    }
    
    inline ::System::Void NewDataSet::SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e) {
        if (e->Action == ::System::ComponentModel::CollectionChangeAction::Remove) {
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        Lesson10::NewDataSet^  ds = (gcnew Lesson10::NewDataSet());
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ::System::Xml::Schema::XmlSchemaAny^  any = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any->Namespace = ds->Namespace;
        sequence->Items->Add(any);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ConfigurationDataTable::ConfigurationDataTable() {
        this->TableName = L"Configuration";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::ConfigurationDataTable::ConfigurationDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::ConfigurationDataTable::ConfigurationDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ConfigurationDataTable::LogFileNameColumn::get() {
        return this->columnLogFileName;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::ConfigurationDataTable::Configuration_IdColumn::get() {
        return this->columnConfiguration_Id;
    }
    
    inline ::System::Int32 NewDataSet::ConfigurationDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline Lesson10::NewDataSet::ConfigurationRow^  NewDataSet::ConfigurationDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<Lesson10::NewDataSet::ConfigurationRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::ConfigurationDataTable::AddConfigurationRow(Lesson10::NewDataSet::ConfigurationRow^  row) {
        this->Rows->Add(row);
    }
    
    inline Lesson10::NewDataSet::ConfigurationRow^  NewDataSet::ConfigurationDataTable::AddConfigurationRow(System::String^  LogFileName) {
        Lesson10::NewDataSet::ConfigurationRow^  rowConfigurationRow = (cli::safe_cast<Lesson10::NewDataSet::ConfigurationRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {LogFileName, nullptr};
        rowConfigurationRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowConfigurationRow);
        return rowConfigurationRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::ConfigurationDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ConfigurationDataTable::Clone() {
        Lesson10::NewDataSet::ConfigurationDataTable^  cln = (cli::safe_cast<Lesson10::NewDataSet::ConfigurationDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::ConfigurationDataTable::CreateInstance() {
        return (gcnew Lesson10::NewDataSet::ConfigurationDataTable());
    }
    
    inline ::System::Void NewDataSet::ConfigurationDataTable::InitVars() {
        this->columnLogFileName = __super::Columns[L"LogFileName"];
        this->columnConfiguration_Id = __super::Columns[L"Configuration_Id"];
    }
    
    inline ::System::Void NewDataSet::ConfigurationDataTable::InitClass() {
        this->columnLogFileName = (gcnew ::System::Data::DataColumn(L"LogFileName", ::System::String::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnLogFileName);
        this->columnConfiguration_Id = (gcnew ::System::Data::DataColumn(L"Configuration_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnConfiguration_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnConfiguration_Id}, 
                true)));
        this->columnLogFileName->AllowDBNull = false;
        this->columnLogFileName->MaxLength = 250;
        this->columnConfiguration_Id->AutoIncrement = true;
        this->columnConfiguration_Id->AllowDBNull = false;
        this->columnConfiguration_Id->Unique = true;
    }
    
    inline Lesson10::NewDataSet::ConfigurationRow^  NewDataSet::ConfigurationDataTable::NewConfigurationRow() {
        return (cli::safe_cast<Lesson10::NewDataSet::ConfigurationRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::ConfigurationDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew Lesson10::NewDataSet::ConfigurationRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::ConfigurationDataTable::GetRowType() {
        return Lesson10::NewDataSet::ConfigurationRow::typeid;
    }
    
    inline ::System::Void NewDataSet::ConfigurationDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ConfigurationRowChanged(this, (gcnew Lesson10::NewDataSet::ConfigurationRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::ConfigurationRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ConfigurationDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ConfigurationRowChanging(this, (gcnew Lesson10::NewDataSet::ConfigurationRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::ConfigurationRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ConfigurationDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ConfigurationRowDeleted(this, (gcnew Lesson10::NewDataSet::ConfigurationRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::ConfigurationRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ConfigurationDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ConfigurationRowDeleting(this, (gcnew Lesson10::NewDataSet::ConfigurationRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::ConfigurationRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::ConfigurationDataTable::RemoveConfigurationRow(Lesson10::NewDataSet::ConfigurationRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::ConfigurationDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        Lesson10::NewDataSet^  ds = (gcnew Lesson10::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ConfigurationDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::EndPointsDataTable::EndPointsDataTable() {
        this->TableName = L"EndPoints";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::EndPointsDataTable::EndPointsDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::EndPointsDataTable::EndPointsDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EndPointsDataTable::EndPoints_IdColumn::get() {
        return this->columnEndPoints_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EndPointsDataTable::Configuration_IdColumn::get() {
        return this->columnConfiguration_Id;
    }
    
    inline ::System::Int32 NewDataSet::EndPointsDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline Lesson10::NewDataSet::EndPointsRow^  NewDataSet::EndPointsDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<Lesson10::NewDataSet::EndPointsRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::EndPointsDataTable::AddEndPointsRow(Lesson10::NewDataSet::EndPointsRow^  row) {
        this->Rows->Add(row);
    }
    
    inline Lesson10::NewDataSet::EndPointsRow^  NewDataSet::EndPointsDataTable::AddEndPointsRow(Lesson10::NewDataSet::ConfigurationRow^  parentConfigurationRowByConfiguration_EndPoints) {
        Lesson10::NewDataSet::EndPointsRow^  rowEndPointsRow = (cli::safe_cast<Lesson10::NewDataSet::EndPointsRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
        if (parentConfigurationRowByConfiguration_EndPoints != nullptr) {
            columnValuesArray[1] = parentConfigurationRowByConfiguration_EndPoints[1];
        }
        rowEndPointsRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowEndPointsRow);
        return rowEndPointsRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::EndPointsDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EndPointsDataTable::Clone() {
        Lesson10::NewDataSet::EndPointsDataTable^  cln = (cli::safe_cast<Lesson10::NewDataSet::EndPointsDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EndPointsDataTable::CreateInstance() {
        return (gcnew Lesson10::NewDataSet::EndPointsDataTable());
    }
    
    inline ::System::Void NewDataSet::EndPointsDataTable::InitVars() {
        this->columnEndPoints_Id = __super::Columns[L"EndPoints_Id"];
        this->columnConfiguration_Id = __super::Columns[L"Configuration_Id"];
    }
    
    inline ::System::Void NewDataSet::EndPointsDataTable::InitClass() {
        this->columnEndPoints_Id = (gcnew ::System::Data::DataColumn(L"EndPoints_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnEndPoints_Id);
        this->columnConfiguration_Id = (gcnew ::System::Data::DataColumn(L"Configuration_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnConfiguration_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnEndPoints_Id}, 
                true)));
        this->columnEndPoints_Id->AutoIncrement = true;
        this->columnEndPoints_Id->AllowDBNull = false;
        this->columnEndPoints_Id->Unique = true;
    }
    
    inline Lesson10::NewDataSet::EndPointsRow^  NewDataSet::EndPointsDataTable::NewEndPointsRow() {
        return (cli::safe_cast<Lesson10::NewDataSet::EndPointsRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::EndPointsDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew Lesson10::NewDataSet::EndPointsRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::EndPointsDataTable::GetRowType() {
        return Lesson10::NewDataSet::EndPointsRow::typeid;
    }
    
    inline ::System::Void NewDataSet::EndPointsDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->EndPointsRowChanged(this, (gcnew Lesson10::NewDataSet::EndPointsRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::EndPointsRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EndPointsDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->EndPointsRowChanging(this, (gcnew Lesson10::NewDataSet::EndPointsRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::EndPointsRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EndPointsDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->EndPointsRowDeleted(this, (gcnew Lesson10::NewDataSet::EndPointsRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::EndPointsRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EndPointsDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->EndPointsRowDeleting(this, (gcnew Lesson10::NewDataSet::EndPointsRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::EndPointsRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EndPointsDataTable::RemoveEndPointsRow(Lesson10::NewDataSet::EndPointsRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::EndPointsDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        Lesson10::NewDataSet^  ds = (gcnew Lesson10::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"EndPointsDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::EndpointDataTable::EndpointDataTable() {
        this->TableName = L"Endpoint";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::EndpointDataTable::EndpointDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::EndpointDataTable::EndpointDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EndpointDataTable::TypeColumn::get() {
        return this->columnType;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EndpointDataTable::IPColumn::get() {
        return this->columnIP;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EndpointDataTable::PortColumn::get() {
        return this->columnPort;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::EndpointDataTable::EndPoints_IdColumn::get() {
        return this->columnEndPoints_Id;
    }
    
    inline ::System::Int32 NewDataSet::EndpointDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline Lesson10::NewDataSet::EndpointRow^  NewDataSet::EndpointDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<Lesson10::NewDataSet::EndpointRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::EndpointDataTable::AddEndpointRow(Lesson10::NewDataSet::EndpointRow^  row) {
        this->Rows->Add(row);
    }
    
    inline Lesson10::NewDataSet::EndpointRow^  NewDataSet::EndpointDataTable::AddEndpointRow(System::String^  Type, System::String^  IP, 
                System::UInt64 Port, Lesson10::NewDataSet::EndPointsRow^  parentEndPointsRowByEndPoints_Endpoint) {
        Lesson10::NewDataSet::EndpointRow^  rowEndpointRow = (cli::safe_cast<Lesson10::NewDataSet::EndpointRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {Type, IP, Port, nullptr};
        if (parentEndPointsRowByEndPoints_Endpoint != nullptr) {
            columnValuesArray[3] = parentEndPointsRowByEndPoints_Endpoint[0];
        }
        rowEndpointRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowEndpointRow);
        return rowEndpointRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::EndpointDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EndpointDataTable::Clone() {
        Lesson10::NewDataSet::EndpointDataTable^  cln = (cli::safe_cast<Lesson10::NewDataSet::EndpointDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::EndpointDataTable::CreateInstance() {
        return (gcnew Lesson10::NewDataSet::EndpointDataTable());
    }
    
    inline ::System::Void NewDataSet::EndpointDataTable::InitVars() {
        this->columnType = __super::Columns[L"Type"];
        this->columnIP = __super::Columns[L"IP"];
        this->columnPort = __super::Columns[L"Port"];
        this->columnEndPoints_Id = __super::Columns[L"EndPoints_Id"];
    }
    
    inline ::System::Void NewDataSet::EndpointDataTable::InitClass() {
        this->columnType = (gcnew ::System::Data::DataColumn(L"Type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnType);
        this->columnIP = (gcnew ::System::Data::DataColumn(L"IP", ::System::String::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnIP);
        this->columnPort = (gcnew ::System::Data::DataColumn(L"Port", ::System::UInt64::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnPort);
        this->columnEndPoints_Id = (gcnew ::System::Data::DataColumn(L"EndPoints_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnEndPoints_Id);
        this->columnType->AllowDBNull = false;
        this->columnIP->AllowDBNull = false;
        this->columnPort->AllowDBNull = false;
    }
    
    inline Lesson10::NewDataSet::EndpointRow^  NewDataSet::EndpointDataTable::NewEndpointRow() {
        return (cli::safe_cast<Lesson10::NewDataSet::EndpointRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::EndpointDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew Lesson10::NewDataSet::EndpointRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::EndpointDataTable::GetRowType() {
        return Lesson10::NewDataSet::EndpointRow::typeid;
    }
    
    inline ::System::Void NewDataSet::EndpointDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->EndpointRowChanged(this, (gcnew Lesson10::NewDataSet::EndpointRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::EndpointRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EndpointDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->EndpointRowChanging(this, (gcnew Lesson10::NewDataSet::EndpointRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::EndpointRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EndpointDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->EndpointRowDeleted(this, (gcnew Lesson10::NewDataSet::EndpointRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::EndpointRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EndpointDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->EndpointRowDeleting(this, (gcnew Lesson10::NewDataSet::EndpointRowChangeEvent((cli::safe_cast<Lesson10::NewDataSet::EndpointRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::EndpointDataTable::RemoveEndpointRow(Lesson10::NewDataSet::EndpointRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::EndpointDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        Lesson10::NewDataSet^  ds = (gcnew Lesson10::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"EndpointDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::ConfigurationRow::ConfigurationRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableConfiguration = (cli::safe_cast<Lesson10::NewDataSet::ConfigurationDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::ConfigurationRow::LogFileName::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableConfiguration->LogFileNameColumn]));
    }
    inline System::Void NewDataSet::ConfigurationRow::LogFileName::set(System::String^  value) {
        this[this->tableConfiguration->LogFileNameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::ConfigurationRow::Configuration_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableConfiguration->Configuration_IdColumn]));
    }
    inline System::Void NewDataSet::ConfigurationRow::Configuration_Id::set(System::Int32 value) {
        this[this->tableConfiguration->Configuration_IdColumn] = value;
    }
    
    inline cli::array< Lesson10::NewDataSet::EndPointsRow^  >^  NewDataSet::ConfigurationRow::GetEndPointsRows() {
        if (this->Table->ChildRelations[L"Configuration_EndPoints"] == nullptr) {
            return gcnew cli::array< Lesson10::NewDataSet::EndPointsRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< Lesson10::NewDataSet::EndPointsRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Configuration_EndPoints"])));
        }
    }
    
    
    inline NewDataSet::EndPointsRow::EndPointsRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableEndPoints = (cli::safe_cast<Lesson10::NewDataSet::EndPointsDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::EndPointsRow::EndPoints_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableEndPoints->EndPoints_IdColumn]));
    }
    inline System::Void NewDataSet::EndPointsRow::EndPoints_Id::set(System::Int32 value) {
        this[this->tableEndPoints->EndPoints_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::EndPointsRow::Configuration_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableEndPoints->Configuration_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'Configuration_Id\' in table \'EndPoints\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::EndPointsRow::Configuration_Id::set(System::Int32 value) {
        this[this->tableEndPoints->Configuration_IdColumn] = value;
    }
    
    inline Lesson10::NewDataSet::ConfigurationRow^  NewDataSet::EndPointsRow::ConfigurationRow::get() {
        return (cli::safe_cast<Lesson10::NewDataSet::ConfigurationRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Configuration_EndPoints"])));
    }
    inline System::Void NewDataSet::EndPointsRow::ConfigurationRow::set(Lesson10::NewDataSet::ConfigurationRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Configuration_EndPoints"]);
    }
    
    inline ::System::Boolean NewDataSet::EndPointsRow::IsConfiguration_IdNull() {
        return this->IsNull(this->tableEndPoints->Configuration_IdColumn);
    }
    
    inline ::System::Void NewDataSet::EndPointsRow::SetConfiguration_IdNull() {
        this[this->tableEndPoints->Configuration_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< Lesson10::NewDataSet::EndpointRow^  >^  NewDataSet::EndPointsRow::GetEndpointRows() {
        if (this->Table->ChildRelations[L"EndPoints_Endpoint"] == nullptr) {
            return gcnew cli::array< Lesson10::NewDataSet::EndpointRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< Lesson10::NewDataSet::EndpointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"EndPoints_Endpoint"])));
        }
    }
    
    
    inline NewDataSet::EndpointRow::EndpointRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableEndpoint = (cli::safe_cast<Lesson10::NewDataSet::EndpointDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::EndpointRow::Type::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableEndpoint->TypeColumn]));
    }
    inline System::Void NewDataSet::EndpointRow::Type::set(System::String^  value) {
        this[this->tableEndpoint->TypeColumn] = value;
    }
    
    inline System::String^  NewDataSet::EndpointRow::IP::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableEndpoint->IPColumn]));
    }
    inline System::Void NewDataSet::EndpointRow::IP::set(System::String^  value) {
        this[this->tableEndpoint->IPColumn] = value;
    }
    
    inline System::UInt64 NewDataSet::EndpointRow::Port::get() {
        return (cli::safe_cast<::System::UInt64 >(this[this->tableEndpoint->PortColumn]));
    }
    inline System::Void NewDataSet::EndpointRow::Port::set(System::UInt64 value) {
        this[this->tableEndpoint->PortColumn] = value;
    }
    
    inline System::Int32 NewDataSet::EndpointRow::EndPoints_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableEndpoint->EndPoints_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'EndPoints_Id\' in table \'Endpoint\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::EndpointRow::EndPoints_Id::set(System::Int32 value) {
        this[this->tableEndpoint->EndPoints_IdColumn] = value;
    }
    
    inline Lesson10::NewDataSet::EndPointsRow^  NewDataSet::EndpointRow::EndPointsRow::get() {
        return (cli::safe_cast<Lesson10::NewDataSet::EndPointsRow^  >(this->GetParentRow(this->Table->ParentRelations[L"EndPoints_Endpoint"])));
    }
    inline System::Void NewDataSet::EndpointRow::EndPointsRow::set(Lesson10::NewDataSet::EndPointsRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"EndPoints_Endpoint"]);
    }
    
    inline ::System::Boolean NewDataSet::EndpointRow::IsEndPoints_IdNull() {
        return this->IsNull(this->tableEndpoint->EndPoints_IdColumn);
    }
    
    inline ::System::Void NewDataSet::EndpointRow::SetEndPoints_IdNull() {
        this[this->tableEndpoint->EndPoints_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::ConfigurationRowChangeEvent::ConfigurationRowChangeEvent(Lesson10::NewDataSet::ConfigurationRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline Lesson10::NewDataSet::ConfigurationRow^  NewDataSet::ConfigurationRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::ConfigurationRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::EndPointsRowChangeEvent::EndPointsRowChangeEvent(Lesson10::NewDataSet::EndPointsRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline Lesson10::NewDataSet::EndPointsRow^  NewDataSet::EndPointsRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::EndPointsRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::EndpointRowChangeEvent::EndpointRowChangeEvent(Lesson10::NewDataSet::EndpointRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline Lesson10::NewDataSet::EndpointRow^  NewDataSet::EndpointRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::EndpointRowChangeEvent::Action::get() {
        return this->eventAction;
    }
}
